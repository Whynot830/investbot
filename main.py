import telebot
import json
import requests
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
import os

bot = telebot.TeleBot("5279674502:AAFXF-kDxk_WVVo9Br5YN5PmNQohsR3oxFQ")

def menu1():
    m = InlineKeyboardMarkup()
    m.row_width = 1
    m.add(InlineKeyboardButton("üìà –¶–µ–Ω—ã", callback_data='getprice'),
          InlineKeyboardButton("üíº‚üµ –î–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data='addtocase'),
          InlineKeyboardButton("üíº‚ü∂ –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data='getcase'),
          InlineKeyboardButton("üö´ –û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data='clear')
          )
    return m


def menu2():
    m = InlineKeyboardMarkup()
    m.row_width = 1
    m.add(InlineKeyboardButton("‚Äπ –í –º–µ–Ω—é", callback_data="tomenu"))
    return m

@bot.message_handler(func=lambda message: message.text == "/start")
def mainmenu(message):
    bot.send_message(message.chat.id,
                     '"–¶–µ–Ω—ã" - –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∫–æ—Ç–∏—Ä–æ–≤–∫–∏\n"–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å" - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å'
                     '\n"–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å" - –≤—ã–≤–æ–¥ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–±—ã–ª–∏', reply_markup=menu1())



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == "getprice":
                bot.edit_message_text('–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',call.message.chat.id,call.message.message_id)
                bot.answer_callback_query(call.id)
                bot.register_next_step_handler(call.message, send_ticker)
            elif call.data == "addtocase":
                c = get_count_of_stocks_case()
                if (c<5):
                    bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å", call.message.chat.id,
                                      call.message.message_id)
                    bot.answer_callback_query(call.id)
                    bot.register_next_step_handler(call.message, add_stock_case)
                else:
                    bot.edit_message_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 5 –ø–æ–∑–∏—Ü–∏—è–º–∏",
                                          call.message.chat.id,call.message.message_id,reply_markup=menu2())
            elif call.data == "getcase":
                bot.edit_message_text("–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞—é...",call.message.chat.id,call.message.message_id)
                bot.answer_callback_query(call.id)
                get_stock_case(call.message)
            elif call.data == "tomenu":
                bot.edit_message_text(
                    '"–¶–µ–Ω—ã" - –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∫–æ—Ç–∏—Ä–æ–≤–∫–∏\n"–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å" - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å'
                    '\n"–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å" - –≤—ã–≤–æ–¥ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–±—ã–ª–∏',
                    call.message.chat.id, call.message.message_id, reply_markup=menu1())
                bot.answer_callback_query(call.id)
            elif call.data == "clear":
                clear_case()
                bot.edit_message_text("–î–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –æ—á–∏—â–µ–Ω—ã\n",call.message.chat.id,call.message.message_id,reply_markup=menu2())
    except Exception as e:
        print(repr(e))

def get_current_price(id):
    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + id + '&interval=1min&apikey=GA64HKYKKJO0LUUU'
    try:
        r = requests.get(url)
        data = r.json()
        if 'Note' in data: return (-2)
        r1 = data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['4. close']
        res = id + ' ' + r1
        return (res.split(' '))
    except:
        return (-1)

def add_stock_case(message):
    if (message.text == '/start'):
        mainmenu(message)
        return
    f = open('text.txt', 'a')
    id = message.text
    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + id + '&interval=1min&apikey=GA64HKYKKJO0LUUU'
    try:
        t = get_current_price(id)
        if (t == -2):
            bot.send_message(message.chat.id,
                             "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, —Ä–∞–≤–Ω–æ–µ 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
                             reply_markup=menu2())
            return
        res = t[0] + ' ' + t[1]
        if (not os.stat("text.txt").st_size == 0): res = '\n' + res

        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
        bot.register_next_step_handler(message, add_num_of_stocks, res)
    except:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–∫–µ—Ä.',reply_markup=menu2())

def get_stock_case(message):
    f = open('text.txt', 'r')
    flag = True
    summC = 0
    summS = 0
    msg = ''
    if (os.stat("text.txt").st_size == 0):
        bot.send_message(message.chat.id,"–î–∞–Ω–Ω—ã–µ –ø–æ –ø–æ—Ä—Ç—Ñ–µ–ª—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç",reply_markup=menu2())
        return
    while (flag):
        s = f.readline().split(' ')
        if (s == ''): break
        id = s[0]
        t = get_current_price(id)
        if (t != -1 and t!=-2):
            summC += float(s[1]) * float(s[2])
            summS += float(t[1]) * float(s[2])
            delta = (float(t[1]) - float(s[1])) * float(s[2])
            if (delta > 0):
                msg += id + ': –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ' + '{:0.3f}'.format(abs(delta)) + ' USD (' + '{:0.1f}'.format(
                    100 * float(t[1]) / float(s[1]) - 100) + ' %)'+'\n'
            else:
                msg += id + ': –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ' + '{:0.3f}'.format(abs(delta)) + ' USD (' + '{:0.1f}'.format(
                                     100 * float(t[1]) / float(s[1]) - 100) + ' %)'+'\n'
        elif (t == -2):
            flag = False
            break
        else:
            break
    if (msg!=''): bot.send_message(message.chat.id, msg)
    if (flag):
        bot.send_message(message.chat.id,
                     '–ò—Ç–æ–≥–æ–≤–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç–∏: ' + '{:0.3f}'.format(summS - summC) + ' USD (' + '{:0.1f}'.format(
                         100 * summS / summC - 100) + ' %)',reply_markup=menu2())
    else:
        bot.send_message(message.chat.id,
                         "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, —Ä–∞–≤–Ω–æ–µ 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
                         reply_markup=menu2())

def send_ticker(message):
    if (message.text == '/start'):
        mainmenu(message)
        return
    id = message.text
    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + id + '&interval=1min&apikey=GA64HKYKKJO0LUUU'
    try:
        r = requests.get(url)
        data = r.json()
        if 'Note' in data:
            bot.send_message(message.chat.id,"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, —Ä–∞–≤–Ω–æ–µ 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É",reply_markup=menu2())
            return
        res = '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ —Ç–∏–∫–µ—Ä–µ ' + id + ' –æ—Ç ' + data['Meta Data']['3. Last Refreshed'] + ' :\n'
        res += '–û—Ç–∫—Ä—ã—Ç–∏–µ:  '+ data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['1. open']+' USD\n'
        res += '–ú–∞–∫—Å–∏–º—É–º:  '+ data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['2. high'] + ' USD\n'
        res += '–ú–∏–Ω–∏–º—É–º:  '+ data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['3. low'] + ' USD\n'
        res += '–ó–∞–∫—Ä—ã—Ç–∏–µ:  '+ data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['4. close'] + ' USD\n'
        res += '–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤:  '+ data['Time Series (1min)'][data['Meta Data']['3. Last Refreshed']]['5. volume'] + '\n'
        bot.send_message(message.chat.id, res, reply_markup=menu2())
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–∫–µ—Ä', reply_markup=menu2())

def add_num_of_stocks(message, res):
    if (message.text == '/start'):
        mainmenu(message)
        return
    f = open('text.txt', 'a')
    if ((message.text).isdigit()):
        r = res + ' ' + message.text
        f.write(r)
        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å',reply_markup=menu2())
    else:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.',reply_markup=menu2())

def get_count_of_stocks_case():
    f = open("text.txt")
    count=0
    while (f.readline()):
        count+=1
    return count

def clear_case():
    if (os.stat("text.txt").st_size == 0): return
    else:
        f = open('text.txt', 'w').close()
        return

bot.polling(none_stop=True, interval=0)